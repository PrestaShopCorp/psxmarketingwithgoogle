name: Storybook CI/CD

on: [push]
#on:
#  pull_request:
#    types: [opened,edited,reopened,synchronize,labeled]

jobs:
  alpha:
    name: Alpha - Storybook
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v1

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.5

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: psessentials-integration
          service_account_key: ${{ secrets.G_CREDENTIAL_INTEGRATION }}
          export_default_credentials: true

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Pull package
        continue-on-error: true
        run: docker pull "$REGISTRY/googleshopping-storybook-package:latest"
        env:
          REGISTRY: ${{ secrets.REGISTRY }}

      - name: Terraform init
        working-directory: _dev/.cloud
        run: |
          terraform init
          terraform workspace select alpha
          terraform fmt

      - name: Build package
        working-directory: _dev
        run: |
          docker build \
            --target=package \
            --tag="$REGISTRY/googleshopping-storybook-package:latest" .
          docker push "$REGISTRY/googleshopping-storybook-package:latest"
        env:
          REGISTRY: ${{ secrets.REGISTRY }}

      - name: Build and push finale image
        working-directory: _dev
        run: |
          docker build . \
            --tag="$REGISTRY/googleshopping-storybook:latest" \
            --cache-from="$REGISTRY/googleshopping-storybook-package:latest"
          docker push "$REGISTRY/googleshopping-storybook:latest"
        env:
          TAG: ${{ steps.get_tag.outputs.TAG }}
          REGISTRY: ${{ secrets.REGISTRY }}

      - name: Terraform apply
        working-directory: _dev/.cloud
        run: terraform apply -auto-approve --var app_version=$SHA
        env:
          SHA: ${{ github.sha }}
